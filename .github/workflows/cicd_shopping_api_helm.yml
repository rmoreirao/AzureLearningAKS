name: Build and deploy API - Helm
on:
  push:
    branches: [ "main" ]
    paths: 
      - 'Shopping/Shopping.API/**'
      - 'aks/shoppingapi.yaml'
      
  workflow_dispatch:

env:
  environment: 'prod'
  rgName: rg-shoppingwebapprmoreirao-prod-${{ secrets.LOCATION_SUFFIX }}
  AKS_CLUSTER_NAME: aks-shoppingrmoreirao-prod-${{ secrets.LOCATION_SUFFIX }}
  AZURE_CONTAINER_REGISTRY: acrshoppingrmoreiraowe

jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        
        # - name: Log in with Azure
        #   uses: Azure/login@v1
        #   with:
        #     # CLIENT_ID = Client ID of Service  Principal
        #     # CLIENT_SECRET = Password created for this specific connection - this can further enhanced
        #     creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

        # - name: Build Shopping API docker image and push to ACR
        #   working-directory: Shopping
        #   run:  az acr build --image shopping/shopping-api:${{ github.sha }}  --registry acrshoppingrmoreiraowe --build-arg build_version=${{ github.sha }} --file Shopping.API/Dockerfile .
  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: build
    steps:
        - uses: actions/checkout@v3

        - name: Log in with Azure
          uses: Azure/login@v1
          with:
            # CLIENT_ID = Client ID of Service  Principal
            # CLIENT_SECRET = Password created for this specific connection - this can further enhanced
            creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'


         # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
        - name: Get K8s context
          uses: azure/aks-set-context@v3
          with:
            creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
            resource-group: ${{ env.rgName }}
            cluster-name: ${{ env.AKS_CLUSTER_NAME }}

        # Runs Helm to create manifest files
        - name: Bake deployment
          uses: azure/k8s-bake@v2
          with:
            renderEngine: "helm"
            silent: 'false'
            arguments: |
              --debug
            helmChart: './aks-helm/shoppingapi/'
            overrides: |
              db.user:rootXXX
              db.password:exampleXXX
            #   db.user_base64: cm9vdA==
            #   db.password_base64: ZXhhbXBsZQ==
            helm-version: "latest"
          id: bake
        
        # - name: Deploy to k8s
        #   uses: Azure/k8s-deploy@v1.2
        #   with:
        #     action: deploy
        #     manifests: ${{ steps.bake.outputs.manifestsBundle }}
        #     images: |
        #       ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/shopping/shopping-api:${{ github.sha }}

        #  # Deploys application based on given manifest file
        # - name: Run Helm Deploy
        #   run: |
        #     helm upgrade \
        #       --install \
        #       --atomic \
        #       --debug \
        #       --wait \
        #       shoppingapi \
        #       ./aks-helm/shoppingapi \
        #       --set db.user=root \
        #       --set db.user_base64=cm9vdA== \
        #       --set db.password=example \
        #       --set db.password_base64=ZXhhbXBsZQ== \
        #       --set image.tag=${{ github.sha }}